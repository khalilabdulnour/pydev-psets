{"version":3,"sources":["app/context.js","app/File.js","app/Folder.js","app/FileTree.js","app/Editor.js","app/App.js","serviceWorker.js","index.js"],"names":["initialState","files","currentFile","reducer","state","action","type","Object","objectSpread","payload","loading","StateContext","createContext","StateProvider","props","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","value","children","File","_useContext","useContext","data","_props","className","onClick","e","stopPropagation","url","filename","fetch","then","resp","json","fileContent","assign","content","classNames","push","href","join","docstring","Folder","_useState","useState","_useState2","isOpen","setOpened","name","split","pop","FileTree","keys","length","style","paddingLeft","recursivelyWriteTree","app_File","reduce","arr","indexOf","concat","src_app_Folder","key","NoFile","Loading","Terminal","iframeEl","useRef","iframe","current","doc","contentDocument","body","color","fontFamily","innerHTML","testContent","ref","border","width","height","Editor","_useContext2","l","setL","_useState3","_useState4","c","setC","Editor_NoFile","Editor_Loading","console","log","timeout","rUrl","method","mode","cache","credentials","headers","Content-Type","JSON","stringify","response","tUrl","lib_default","placeholder","theme","fontSize","showPrintMargin","showGutter","highlightActiveLine","onChange","clearTimeout","setTimeout","d","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","wrap","useWrapMode","Editor_Terminal","App","context_StateProvider","FileTree_FileTree","react_router_dom","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67158b4e.chunk.js","sourcesContent":["import React, {\n    createContext,\n    useReducer,\n} from 'react';\n\nconst initialState = {\n    files: {},\n    currentFile: {},\n}\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"UPDATE_FILES\":\n            return {...state, files: action.payload};\n        case \"UPDATE_CURRENT_FILE\":\n            return {...state, currentFile: action.payload};\n        case \"UPDATE_CURRENT_FILE_CONTENT\":\n            return {...state, currentFile: action.payload};\n        case \"UPDATE_LOADING\":\n            return {...state, loading: action.payload};\n        default:\n            return {...state};\n    }\n}\nconst StateContext = createContext(initialState);\nconst StateProvider = props => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return <StateContext.Provider value={{state, dispatch}}>\n        {props.children}\n    </StateContext.Provider>\n}\n\nexport {StateContext, StateProvider}\n","import React, { useContext } from 'react';\n\nimport {StateContext} from './context';\n\nconst File = props => {\n    const {state, dispatch} = useContext(StateContext)\n    const {data,} = props;\n    const handleClick = e => {\n        e.stopPropagation();\n        dispatch({\n            type: 'UPDATE_CURRENT_FILE',\n            payload: data,\n        })\n\n        const url = 'http://localhost:5000/path/' + data.filename;\n        fetch(url)\n            .then(resp => resp.json())\n            .then(fileContent => {\n                dispatch({\n                    type: 'UPDATE_CURRENT_FILE_CONTENT',\n                    payload: Object.assign({}, data, {\n                        content: fileContent.content, \n                    }),\n                })\n            })\n    }\n\n    const _props = {\n        'className': \"file\",\n        'onClick': handleClick,\n    }\n    const classNames = []\n    if (state.currentFile.filename === data.filename) {\n        classNames.push('active')\n    }\n    return <li {..._props}>\n        <a href={\"#/path/\"+data.filename} className={classNames.join(\" \")}>\n            {data.docstring}\n        </a>\n    </li>\n}\n\nexport default File;\n","import React, { useState } from 'react';\n\nconst Folder = props => {\n    const [isOpen, setOpened] = useState(true)\n    const handleClick = e => {\n        e.stopPropagation();\n        setOpened(!isOpen)\n    }\n\n    const classNames = [\"folder\"]\n    if (isOpen) {\n        classNames.push(\"folder-open\")\n    }\n\n    const name = props.name.split('.').pop()\n    const _props = {\n        'className': classNames.join(' '),\n        'onClick': handleClick,\n    }\n    const children = (isOpen) ? props.children : null;\n    return <li {..._props}>\n        {name}\n        <ul>{children}</ul>\n    </li>\n}\n\nexport default Folder;\n","import React, { useContext } from 'react';\nimport \"./Folder.css\";\n\nimport File from \"./File\"\nimport Folder from \"./Folder\"\n\nimport {StateContext} from './context';\n\nconst recursivelyWriteTree = data => {\n    if (data.docstring) return <File data={data} />\n\n    return Object.keys(data).reduce((arr, name) => {\n        if (name.indexOf('session') > -1) return arr;\n        return arr.concat([<Folder key={name} name={name}>\n            {recursivelyWriteTree(data[name])}\n        </Folder>])\n    }, [])\n}\n\nconst FileTree = props => {\n    const {state, dispatch} = useContext(StateContext)\n    if (Object.keys(state.files).length === 0) {\n        fetch('http://localhost:5000/list/problems')\n            .then(resp => resp.json())\n            .then(data => dispatch({\n                type: 'UPDATE_FILES',\n                payload: data,\n            }))\n    }\n    return <div className=\"file-browser\">\n        <ul style={{paddingLeft: '0'}}>\n            {recursivelyWriteTree(state.files)}\n        </ul>\n    </div>\n}\n\nexport {FileTree}\n","import React, { useContext, useRef, useState } from 'react';\nimport \"./Editor.css\"\nimport \"./Loader.css\"\nimport \"./Terminal-bar.css\"\n\nimport brace from 'brace';\nimport AceEditor from 'react-ace';\n\nimport 'brace/mode/python';\nimport 'brace/theme/monokai';\n\nimport {StateContext} from './context';\n\nconst NoFile = props => {\n    return <div className=\"no-file\">\n        <div className=\"no-file__msg\">\n           <div className=\"no-file-header\">\n            🎉🎊 Hello, Wrold! 🎊🎉 \n           </div>\n           <br/>\n           Welcome! This UI allows you to run python code on your machine from within the browser environment. This obviates the need to rely heavily on terminal to run your practice problems and focus <strong>only</strong> on problem solving.\n           \n           <br/>\n           <br/>\n           <div className=\"no-file-footer\">\n            Happy coding! 🙌 🎈🙏\n           </div>\n        </div>\n    </div>\n}\n\nconst Loading = props => {\n    return <div className=\"no-file\">\n        <div className=\"loader\">\n            <div className=\"emoji hat\"></div>\n            <div className=\"emoji confetti\"></div>\n            <div className=\"emoji balloon\"></div>\n            <div className=\"emoji hands\"></div>\n        </div> \n    </div>\n}\n\nconst Terminal = props => {\n    const {state, dispatch} = useContext(StateContext)\n    const {currentFile,} = state;\n\n    const iframeEl = useRef(null);\n    const iframe = iframeEl.current;\n    if (iframe) {\n        const doc = iframe.contentDocument;\n        doc.body.style.color = 'white';\n        doc.body.style.fontFamily = 'Roboto Mono';\n        doc.body.innerHTML = currentFile.testContent;\n    }\n\n    return <div className=\"terminal\">\n        <iframe ref={iframeEl} style={{\n            border: 'none',\n            width: '100%',\n            height: '100%',\n        }}/>\n    </div>\n}\n\nconst Editor = props => {\n    const {state, dispatch} = useContext(StateContext)\n    const {currentFile,} = state;\n    const [l, setL] = useState(false)\n    const [c, setC] = useState('')\n\n    if (!Object.keys(currentFile).length) {\n        return <NoFile />\n    }\n\n    if (!currentFile.content) {\n        return <Loading />\n    }\n\n    console.log('C is', c)\n    if (!c) setC(currentFile.content)\n\n    if (!currentFile.testContent) {\n        fetch('http://localhost:5000/pyversion')\n            .then(resp => resp.json())\n            .then(data => dispatch({\n                type: 'UPDATE_CURRENT_FILE_CONTENT',\n                payload: Object.assign({}, currentFile, {\n                    testContent: data.content,\n                }),\n            }))\n     }\n\n    let timeout = null;\n    const url = 'http://localhost:5000/path/' + currentFile.filename;\n    const onChange = e => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            setL(true)\n            fetch(url, {\n                method: \"POST\",            \n                mode: \"cors\",\n                cache: \"no-cache\",\n                credentials: \"same-origin\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                }, \n                body: JSON.stringify({\"content\": e}),\n            })\n            .then(d => {\n                setC(e)\n                setL(false)\n            })\n        }, 750);\n    }\n\n    const run = e => {\n        if (l) {console.log('nope'); return;}\n        const tUrl = 'http://localhost:5000/test/' + currentFile.filename;\n        fetch(tUrl, {\n            method: \"POST\",\n            mode: \"cors\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }, \n            body: JSON.stringify({}),\n        })\n        .then(response => response.json())\n        .then(data => dispatch({\n            type: 'UPDATE_CURRENT_FILE_CONTENT',\n            payload: Object.assign({}, currentFile, {\n                testContent: data.content,\n            }),\n        }))\n    }\n\n    const exec = e => {\n\n        const rUrl = 'http://localhost:5000/run/' + currentFile.filename;\n        fetch(rUrl, {\n            method: \"POST\",\n            mode: \"cors\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }, \n            body: JSON.stringify({}),\n        })\n        .then(response => response.json())\n        .then(data => dispatch({\n            type: 'UPDATE_CURRENT_FILE_CONTENT',\n            payload: Object.assign({}, currentFile, {\n                testContent: data.content,\n            }),\n        }))\n    }\n\n    return <div className=\"editor\">\n        <div className=\"terminal-bar\">\n            <div className=\"terminal-bar-header\">\n                {currentFile.docstring}\n            </div>\n            <div className={\"terminal-bar-buttons \" + (l ? \"terminal-bar-buttons--inactive\" : \"\")}>\n                <div className=\"terminal-bar-run\" onClick={exec}>\n                   Run\n                </div>\n                <div className=\"terminal-bar-test\" onClick={run}>\n                   Test\n                </div>\n            </div>\n        </div>\n        <AceEditor\n          placeholder=\"Placeholder Text\"\n          mode=\"python\"\n          theme=\"monokai\"\n          name=\"blah2\"\n          fontSize={14}\n          showPrintMargin={true}\n          showGutter={true}\n          highlightActiveLine={true}\n          value={c}\n          onChange={onChange}\n          setOptions={{\n              enableBasicAutocompletion: false,\n              enableLiveAutocompletion: false,\n              enableSnippets: false,\n              showLineNumbers: true,\n              tabSize: 2,\n              wrap: true,\n              useWrapMode: true,\n          }}/>\n        <Terminal />\n    </div>\n}\n\nexport default Editor;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport \"../App.css\"\n\nimport {StateProvider} from './context'\nimport {FileTree} from './FileTree';\nimport Editor from './Editor';\n\n\nconst App = props => {\n    return (<div>\n        <StateProvider>\n            <FileTree />\n            <HashRouter>\n                <Switch>\n                    <Route path='/' exact component={Editor} />\n                    <Route path='/path' component={Editor} />\n                </Switch>\n            </HashRouter>\n        </StateProvider>\n    </div>)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}