{"version":3,"sources":["storage.js","AccessToken.js","github.js","PSETPicker.js","Editor.js","App.js","index.js"],"names":["Storage","Object","classCallCheck","this","token","getItem","name","jsonify","arguments","length","undefined","default_","data","localStorage","JSON","parse","val","valToSet","stringify","setItem","key","removeItem","AccessToken","props","_this","possibleConstructorReturn","getPrototypeOf","call","onKeyDown","e","keyCode","setToken","onChange","setState","githubTokenVal","target","value","storage","state","nextStateMode","react_default","a","createElement","Fragment","type","placeholder","className","onClick","React","Component","axios","require","getPath","prefix","path","owner","repo","concat","request","method","params","headers","base","access_token","url","baseURL","assign","save","localData","selected_branch","msg","commitSha","then","_ref3","object","sha","shaNewTree","_ref4","base_tree","tree","map","each","mode","content","_ref5","Promise","all","_ref6","_ref7","slicedToArray","parents","message","_ref8","_ref9","console","log","PSETPicker","options","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","res","fuse","search","searchq","results","createPset","pset","loading","getPset","_this2","getPsets","Fuse","style","width","display","justifyContent","renderRes","renderPset","_this3","item","_parent","remove","textAlign","_this4","displayable","reduce","hash","curr","par","push","choose","_this$state","newData","filter","newPset","_this$state2","p","_this5","_ref","branch","ref","indexOf","_ref2","file","allSubFiles","arr","subFile","i","_parentSha","children","objectSpread","ace","Editor","defineProperty","goBack","prevStateMode","masterBranch","psetName","editor","getValue","alert","catch","edit","getSession","setMode","setTheme","setUseWrapMode","setReadOnly","on","setValue","validTrees","items","j","_parentsha","_gparent","_gparentsha","t","v","atob","sanitized","str","_i","_Object$keys","s","obj","header","slice","split","join","toUpperCase","_i2","_Object$keys2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","minHeight","padding","id","height","App","stateModes","statePtr","getStateModes","stateMode","bind","assertThisInitialized","pop","renderMethod","AccessToken_AccessToken","PSETPicker_PSETPicker","Editor_Editor","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.86e0f5bc.chunk.js","sourcesContent":["export default class Storage {\n    getItem(name, jsonify=false, default_=\"[]\") {\n        const data = localStorage.getItem(name)\n        if (jsonify) {\n            return JSON.parse(data || default_); \n        }\n\n        return data;\n    }\n\n    setItem(name, val) {\n        let valToSet = val;\n        if (typeof val !== \"string\") {\n            valToSet = JSON.stringify(val);\n        }\n        localStorage.setItem(name, valToSet);\n\n        return  val;\n    }\n\n    removeItem(key) {\n        localStorage.removeItem(key)\n    }\n\n    constructor() {\n        this.token = this.getItem('token')\n    }\n\n    getStateModes() {\n        return this.getItem('stateModes', true);\n    }\n\n    getPset() {\n        return this.getItem('pset', true);\n    }\n}\n","import React from 'react';\nimport './App.css';\n\nimport Storage from \"./storage\";\n\n\nexport default class AccessToken extends React.Component {\n    constructor(props) {\n        super(props)\n        this.storage = new Storage();\n        this.state = {githubTokenVal: \"\"};\n    }\n    onKeyDown = e => e.keyCode === 13 ? this.setToken() : '';\n\n    onChange = e => this.setState({\n        githubTokenVal: e.target.value,\n    })\n\n    setToken = e => {\n        this.storage.setItem('token', this.state.githubTokenVal)\n        this.setState({\n            githubTokenVal: '',\n        })\n        this.props.nextStateMode()\n    }\n\n    render() {\n        return <>\n            <input \n                type=\"text\"\n                placeholder=\"Github Access Token\" \n                className=\"input-field\"\n                value={this.state.githubTokenVal}\n                onKeyDown={this.onKeyDown}\n                onChange={this.onChange}/>\n            <button className=\"input-btn\" onClick={this.setToken}>Save</button>\n        </>\n    }\n}\n\n\n","const axios = require('axios');\n\nconst GITHUB_API = \"https://api.github.com\";\nconst OWNER = \"mottaquikarim\";\nconst REPO = \"pydev-psets\";\n\n/*\n *  Given an API \"prefix\" (ie: repo, user, etc)\n *  and \"path\" (ie: git/commit/:path, etc)\n *  plug in owner and repo config values\n */\nconst getPath = (prefix, path, owner=OWNER, repo=REPO) => `/${prefix}/${owner}/${repo}/${path}`;\n\n/*\n *  Generic method for making API calls to Github\n */\nconst request = (\n    path, \n    method,\n    params = {},\n    headers = {},\n    data = {},\n    base = GITHUB_API,\n    access_token = localStorage.getItem('token')\n) => axios({\n    url: path,\n    baseURL: base,\n    method,\n    params: Object.assign({}, params, {\n        access_token,\n    }),\n    headers,\n    data,\n});\n\n/*\n *  Get contents of path, given UUID\n */\nconst getContent = (uuid, localData, selected_branch) => request(\n    getPath('repos', 'contents/content/' + uuid), \n    \"GET\",\n    {ref: selected_branch},\n).then(({data}) => Promise.all(data.map(item => {\n    const {path} = item;\n    const hash = {};\n    hash.name = path.split('/').pop();\n    hash.type = hash.name.split('.').pop();\n    return request(\n        getPath(\"repos\", \"contents/\" + path),\n        \"GET\",\n        {ref: selected_branch},\n    ).then(({data}) => {\n        const {content} = data;\n        const localItem = localData.filter(\n            item => item.name === data.name\n        );\n\n        if (localItem.length) {\n            hash.content = localItem[0].content;\n        }\n        else {\n            hash.content = atob(content);\n        }\n\n        hash.sha = data.sha;\n        return hash;\n   });\n}))).then(all => {\n    localStorage.setItem(uuid, JSON.stringify(all));\n    return all;\n});\n\n/*\n *  Build a new commit and send to branch\n */\nconst save = (localData, selected_branch, msg, owner=OWNER, repo=REPO) => {\n    const commitSha = request(getPath(\"repos\", \"git/\" + selected_branch, owner, repo), \"GET\")\n        .then(({data}) => data.object.sha)\n\n    const shaBaseTree = commitSha.then(sha => request(getPath(\"repos\", \"git/commits/\" + sha, owner, repo), \"GET\"))\n        .then(({data}) => data.sha);\n\n    const shaNewTree = shaBaseTree.then(sha => request(\n        getPath(\"repos\", \"git/trees\", owner, repo),\n        \"POST\",\n        {},\n        {},\n        {\n            base_tree: sha,\n            tree: localData.map(each =>({\n                mode: '100644',\n                type: 'blob',\n                path: each.path,\n                content: each.content,\n            })),\n        }\n    )).then(({data}) => data.sha);\n\n    const shaNewCommit = Promise.all([commitSha, shaNewTree])\n        .then(([commitSha, shaNewTree]) => {\n            return request(\n                getPath(\"repos\", \"git/commits\", owner, repo),\n                \"POST\",\n                {},\n                {},\n                {\n                    parents: [commitSha],\n                    tree: shaNewTree,\n                    message: msg,\n                }\n            );\n        })\n        .then(({data}) => data.sha);\n    \n    const finalStep = shaNewCommit.then(sha => request(\n        getPath(\"repos\", \"git/\" + selected_branch, owner, repo),\n        \"POST\",\n        {},\n        {},\n        {sha,}\n    )).then(({data}) => console.log(data));\n\n    return finalStep;\n}\n\nexport {\n    getPath,\n    request,\n    save,\n    getContent,\n}\n\n","import React from 'react';\nimport './App.css';\nimport Fuse from 'fuse.js';\n\nimport Storage from \"./storage\";\nimport {\n    request,\n    getPath,\n} from \"./github\";\n\n\nexport default class PSETPicker extends React.Component {\n    options = {\n      shouldSort: true,\n      threshold: 0.3,\n      location: 0,\n      distance: 100,\n      maxPatternLength: 32,\n      minMatchCharLength: 1,\n      keys: [\n        \"_parent\",\n        \"path\",\n        //\"author.firstName\"\n      ]\n    }\n\n    constructor(props) {\n        super(props);\n        this.storage = new Storage();\n        this.state = {\n            loading: true,\n            searchq: '',\n            results: [],\n            data: [],\n            pset: this.storage.getPset(),\n        }\n        this.fuse = null;\n    }\n\n    componentDidMount() {\n        this.getPsets()\n            .then(data => {\n                this.setState({loading: false, data}, () => {\n                    this.fuse = new Fuse(data, this.options); // \"list\" is the item array\n                })\n            })\n    }\n\n    render() {\n        const {loading} = this.state;\n\n        if (loading) return <p>Loading...</p>\n\n        return <div className=\"wrapper-flex\">\n            <div className=\"wrapper-flex-left\">\n                <div style={{\n                    'width': '100%',\n                    'display': 'flex',\n                    'justifyContent': 'center',\n                }}>\n                <input \n                    type=\"text\"\n                    placeholder=\"Search for PSET\" \n                    className=\"input-field\"\n                    value={this.state.searchq}\n                    onChange={this.onChange}/>\n                </div>\n                {this.renderRes()}\n           </div>\n            {this.renderPset()}\n        </div>\n    }\n\n    renderPset() {\n        const {pset} = this.state;\n\n        if (pset.length === 0) return null;\n\n        return <div className=\"wrapper-flex-right\">\n            <h2>Your PSET</h2>\n            <ol>\n            {pset.map(item => {\n                return <li key={item.sha} className=\"pset-title-sub\">\n                    {item._parent}/{item.path} <span onClick={e => this.remove(item)}>❌ </span>\n                </li>\n            })}\n            </ol>\n            <div style={{textAlign: 'center'}}>\n                <button className=\"input-btn\" onClick={this.createPset}>\n                    Save\n                </button>\n            </div>\n        </div>\n    }\n\n    renderRes() {\n        const {results} = this.state;\n        const displayable = results.reduce((hash, curr) => {\n            const par = curr._parent;\n            if (!hash[par]) hash[par] = [];\n            hash[par].push(curr);\n\n            return hash;\n        }, {});\n\n        return <ul className=\"pset-wrap\">\n            {Object.keys(displayable).map(key => {\n                return <li key={key}>\n                    <strong className=\"pset-title\">\n                        {key}\n                    </strong>\n                    <ul>\n                    {displayable[key].map(curr => {\n                        return <li key={curr.sha} className=\"pset-title-sub\" onClick={e => this.choose(curr)}>\n                            {key}/{curr.path}\n                        </li>\n                    })}\n                    </ul>\n                </li>\n            })}\n        </ul>\n    }\n\n    choose(curr) {\n        const {data, searchq, pset} = this.state;\n        const newData = data.filter(item => item.sha !== curr.sha)\n\n        this.fuse = new Fuse(newData, this.options); // \"list\" is the item array\n        const res = this.fuse.search(searchq)\n\n        const newPset = pset.concat([curr])\n\n        this.setState({\n            results: res,\n            data: newData,\n            pset: newPset,\n        })\n    }\n\n    remove(curr) {\n        const {data, searchq, pset} = this.state;\n        const newPset = pset.filter(p => p.sha !== curr.sha)\n        const newData = data.concat([curr])\n\n        this.fuse = new Fuse(newData, this.options); // \"list\" is the item array\n        const res = this.fuse.search(searchq)\n\n        this.setState({\n            pset: newPset,\n            data: newData,\n            results: res,\n        })\n    }\n\n    onChange = e => {\n        const res = this.fuse.search(e.target.value)\n        this.setState({\n            searchq: e.target.value,\n            results: res,\n        })\n    }\n\n    getPsets() {\n        return request(getPath(\"repos\", \"git/refs/heads\"), \"GET\")\n            // grab master branch\n            .then(({data}) => data.filter(branch => branch.ref.indexOf('master') > -1))\n            // store master branch info\n            .then(branch => this.storage.setItem('masterBranch', branch[0]))\n            // get all content from master\n            .then(branch => request(getPath(\"repos\", \"contents/\"), \"GET\", {ref: branch.ref,}))\n            // drill down to only stuff that starts with \"pset_\"\n            .then(({data}) => data.filter(item => item.name.indexOf(\"pset_\") === 0 && item.name.indexOf(\"_ext\") === -1))\n            // get all files for pset_*\n            .then(data => Promise.all(data.map(file => request(getPath(\"repos\", \"git/trees/\"+file.sha), \"GET\",)))\n                // for each file, get trees and match with parents (ie: pset_* name)\n                .then(allSubFiles => allSubFiles.reduce((arr, subFile, i) => {\n                    const p = {_parent: data[i].name, _parentSha: data[i].sha};\n                    const children = subFile.data.tree.map(tree => ({...tree, ...p}))\n                    return arr.concat(children)\n                }, [])))\n            // print or return, etc\n            .then(all => {\n                console.log(all)\n                return all;\n            })\n    }\n\n    createPset = e => {\n        const {pset} = this.state;\n        this.storage.setItem('pset', pset)\n        this.props.nextStateMode()\n    }\n}\n","import React from 'react';\nimport './App.css';\n\nimport Storage from \"./storage\";\nimport {\n    request,\n    getPath,\n    save,\n} from \"./github\";\n\nconst ace = require('brace');\nrequire('brace/theme/monokai');\nrequire('brace/mode/markdown');\n\n\n\nexport default class Editor extends React.Component {\n    constructor(props) {\n        super(props)\n        this.storage = new Storage();\n        this.state = {\n            msg: '',\n            psetName: '',\n        }\n    }\n\n    componentDidMount() {\n        this.editor = ace.edit('editor');\n        const editor = this.editor;\n\n        editor.getSession().setMode('ace/mode/markdown');\n        editor.setTheme('ace/theme/monokai');\n        editor.getSession().setUseWrapMode(true);\n        editor.setReadOnly(true); \n        editor.getSession().on('change', () => {\n            const content = editor.getValue();\n            this.storage.setItem('content', content)\n        })\n        if (this.storage.getItem('content')) {\n            editor.getSession().setValue(this.storage.getItem('content'));\n            editor.setReadOnly(false); \n            return;\n        }\n        else {\n            editor.getSession().setValue('Loading...');\n        }\n\n        const pset = this.storage.getPset()\n        const masterBranch = this.storage.getItem('masterBranch', true)\n\n        const content = pset.map(curr => request(\n            getPath(\"repos\", \"git/trees/\" + curr.sha),\n            \"GET\",\n        ))\n\n        let validTrees = []\n        Promise\n            .all(content)\n            .then(items => items.reduce((arr, item, j) => {\n                const {tree} = item.data;\n                const validTrees = tree\n                    .filter(i => i.path.indexOf('.py') > -1)\n                    .map(i => ({\n                        ...i, \n                        _parent: pset[j].path, \n                        _parentsha: pset[j].sha,\n                        _gparent: pset[j]._parent, \n                        _gparentsha: pset[j]._parentSha,\n                    }))\n\n                return arr.concat(validTrees)\n            }, []))\n            .then(t => {\n                validTrees = t;\n                return t;\n            })\n            .then(all => Promise.all(all.map(curr => request(\n                getPath(\"repos\", \"contents/\"+curr._gparent + \"/\" + curr._parent + \"/\" + curr.path),\n                \"GET\",\n                {ref: masterBranch.ref}\n            ))))\n            .then(data => data.reduce((hash, {data}, i) => {\n                const v = validTrees[i]\n                data.content = atob(data.content);\n                if (!hash[v._gparent]) hash[v._gparent] = {}\n                if (!hash[v._gparent][v._parent]) hash[v._gparent][v._parent] = []\n\n                hash[v._gparent][v._parent].push(data)\n                return hash;\n            }, {}))\n            .then(sanitized => {\n                const str = []\n                for (const s of Object.keys(sanitized)) {\n                    const obj = sanitized[s];\n                    const header = s.slice(4).split('_').join(' ').toUpperCase()\n                    str.push(`# ${header}\\n`)\n                    for (const t of Object.keys(obj)) {\n                        str.push(`## ${t.toUpperCase()}\\n`)\n                        const arr = obj[t]\n                        for (const a of arr) {\n                            str.push(`### ${a.name.toUpperCase()}\\n`)\n                            str.push(\"\\n\\n```python\\n\" + a.content + \"\\n```\\n\\n\")\n                        }\n                    }\n                }\n                console.log(sanitized)\n                editor.getSession().setValue(str.join('\\n'));\n                editor.setReadOnly(false); \n            })\n\n    }\n    render() {\n        const styles = {\n            width: '100%',\n            height: '100%',\n        }\n        return <div className=\"wrapper-flex\" style={{\n            'minHeight': '100vh',\n        }}>\n            <div style={{\n                'width': '15%', \n            }}>\n                <input \n                    type=\"text\"\n                    placeholder=\"my_pset.md\" \n                    className=\"input-field-sm\"\n                    value={this.state.psetName}\n                    onChange={e => this.onChange(e,'psetName')}/>\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Commit message\" \n                    className=\"input-field-sm\"\n                    value={this.state.msg}\n                    onChange={e => this.onChange(e,'msg')}/>\n\n                <button className=\"input-btn\"\n                    onClick={this.goBack}>Back</button>\n\n                <button className=\"input-btn\"\n                    onClick={this.save}>Save</button>\n            </div>\n            <div className=\"wrapper-flex-right\" style={{\n                'width': '85%',\n                'padding': '0',\n            }}>\n                <div id=\"editor\" style={styles}></div>\n            </div>\n        </div>\n    }\n\n    onChange = (e, key) => {\n        this.setState({\n            [key]: e.target.value,\n        })\n    }\n    goBack = e => {\n        this.props.prevStateMode();\n    }\n\n    save = e => {\n        const masterBranch = this.storage.getItem('masterBranch', true)\n        const {psetName, msg} = this.state;\n\n        if (!msg) {\n            alert('You need a commit message!')\n            return\n        }\n        if (!psetName) {\n            alert('you need to name your pset - something like \"test_pset.md\"')\n            return\n        }\n\n        save([{\n            \"path\": \"src/PSETS/\" + psetName,\n            \"content\": this.editor.getValue()\n        }], masterBranch.ref, msg, \"mottaquikarim\", \"PYTH2\")\n        .then(data => {\n            this.setState({msg: ''})\n            this.storage.removeItem('content')\n            alert('success!')\n        })\n        .catch(e => {\n            alert('fail! check console')\n            console.log(e)\n        })\n    }\n}\n","import React from 'react';\nimport './App.css';\n\nimport Storage from \"./storage\";\nimport AccessToken from './AccessToken';\nimport PSETPicker from './PSETPicker';\nimport Editor from './Editor';\n\nclass App extends React.Component {\n    stateModes = [0, 1, 2];\n    statePtr = 0;\n\n    constructor(props) {\n        super(props);\n\n        this.storage = new Storage();\n        const stateModes = this.storage.getStateModes(); \n        this.statePtr = stateModes.length;\n\n        this.state = {\n            stateMode: this.stateModes[this.statePtr],\n        }\n\n        for (const stateMode of this.stateModes) {\n            this[`renderState${stateMode}`] = this[`renderState${stateMode}`].bind(this)\n        }\n\n        this.nextStateMode = this.nextStateMode.bind(this);\n        this.prevStateMode = this.prevStateMode.bind(this);\n    }\n\n    nextStateMode() {\n        this.storage.setItem('stateModes', this.storage.getStateModes().concat([this.stateModes[this.statePtr]]))\n\n        this.setState({\n            stateMode: this.stateModes[++this.statePtr],\n        })\n    }\n\n    prevStateMode() {\n        const stateModes = this.storage.getStateModes(); \n        stateModes.pop();\n\n        this.storage.setItem('stateModes', stateModes)\n\n        this.setState({\n            stateMode: this.stateModes[--this.statePtr],\n        })\n    }\n\n    render() {\n      const {stateMode} = this.state;\n      const renderMethod = this[`renderState${stateMode}`]\n\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {renderMethod()}\n          </header>\n        </div>\n      );\n    }\n\n    renderState0() { \n        return <AccessToken \n            nextStateMode={this.nextStateMode}/>\n    }\n\n    renderState1() {\n        return <PSETPicker\n            nextStateMode={this.nextStateMode}/>\n    }\n\n    renderState2() {\n        return <Editor\n            nextStateMode={this.nextStateMode}\n            prevStateMode={this.prevStateMode}/>\n    }\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}